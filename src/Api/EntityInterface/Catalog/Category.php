<?php
/**
 * B2W Digital - Companhia Digital
 *
 * Do not edit this file if you want to update this SDK for future new versions.
 * For support please contact the e-mail bellow:
 *
 * sdk@e-smart.com.br
 *
 * @category  SkuHub
 * @package   SkuHub
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br).
 *
 * @author    Tiago Sampaio <tiago.sampaio@e-smart.com.br>
 */

namespace SkyHub\Api\EntityInterface\Catalog;

use SkyHub\Api\EntityInterface\Catalog\Product\MutualMethods;
use SkyHub\Api\EntityInterface\Catalog\Product\Variation;
use SkyHub\Api\EntityInterface\EntityAbstract;

class Category extends EntityAbstract
{

    /**
     * @param string $code
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->setData('code', (string) $code);
        return $this;
    }


    /**
     * @param string $name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->setData('name', (string) $name);
        return $this;
    }


    /**
     * @return string
     */
    public function getCode()
    {
        return (string) $this->getData('code');
    }


    /**
     * @return string
     */
    public function getName()
    {
        return (string) $this->getData('name');
    }


    /**
     * @return array
     */
    public function export()
    {
        return [
            'category' => (array) $this->getData()
        ];
    }


    /**
     * @return \SkyHub\Api\Handler\Response\HandlerInterface
     */
    public function create()
    {
        $this->validate();

        /** @var \SkyHub\Api\Handler\Request\Catalog\CategoryHandler $handler */
        $handler = $this->requestHandler();

        /** @var \SkyHub\Api\Handler\Response\HandlerInterface $response */
        $response = $handler->create($this->getCode(), $this->getName());

        return $response;
    }


    /**
     * @return \SkyHub\Api\Handler\Response\HandlerInterface
     */
    public function update()
    {
        $this->validate();

        /** @var \SkyHub\Api\Handler\Request\Catalog\CategoryHandler $handler */
        $handler = $this->requestHandler();

        /** @var \SkyHub\Api\Handler\Response\HandlerInterface $response */
        $response = $handler->create($this->getCode(), $this->getName());

        return $response;
    }


    /**
     * @return \SkyHub\Api\Handler\Response\HandlerInterface
     */
    public function delete()
    {
        /** @var \SkyHub\Api\Handler\Request\Catalog\CategoryHandler $handler */
        $handler = $this->requestHandler();

        /** @var \SkyHub\Api\Handler\Response\HandlerInterface $response */
        $response = $handler->delete($this->getCode());

        return $response;
    }


    /**
     * @return \SkyHub\Api\Handler\Response\HandlerInterface
     */
    public function categories()
    {
        /** @var \SkyHub\Api\Handler\Request\Catalog\CategoryHandler $handler */
        $handler = $this->requestHandler();
        return $handler->categories();
    }
}
