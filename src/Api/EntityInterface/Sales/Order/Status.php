<?php
/**
 * B2W Digital - Companhia Digital
 *
 * Do not edit this file if you want to update this SDK for future new versions.
 * For support please contact the e-mail bellow:
 *
 * sdk@e-smart.com.br
 *
 * @category  SkuHub
 * @package   SkuHub
 *
 * @copyright Copyright (c) 2018 B2W Digital - BSeller Platform. (http://www.bseller.com.br).
 *
 * @author    Tiago Sampaio <tiago.sampaio@e-smart.com.br>
 */

namespace SkyHub\Api\EntityInterface\Sales\Order;

use SkyHub\Api\EntityInterface\EntityAbstract;
use SkyHub\Api\Handler\Request\Sales\Order\StatusHandler;

class Status extends EntityAbstract
{
    
    /**
     * @param string $code
     *
     * @return $this
     */
    public function setCode($code)
    {
        return $this->setData('code', (string) $code);
    }
    
    
    /**
     * @return string
     */
    public function getCode()
    {
        return (string) $this->getData('code');
    }
    
    
    /**
     * @param string $label
     *
     * @return $this
     */
    public function setLabel($label)
    {
        return $this->setData('label', (string) $label);
    }
    
    
    /**
     * @return string
     */
    public function getLabel()
    {
        return (string) $this->getData('label');
    }
    
    
    /**
     * @param string $type
     *
     * @return $this
     */
    public function setType($label)
    {
        return $this->setData('type', (string) $label);
    }
    
    
    /**
     * @return string
     */
    public function getType()
    {
        return (string) $this->getData('type');
    }
    
    
    /**
     * @return \SkyHub\Api\Handler\Response\HandlerInterface
     */
    public function statuses()
    {
        /** @var StatusHandler $handler */
        $handler = $this->requestHandler();
        return $handler->statuses();
    }
    
    
    /**
     * @return \SkyHub\Api\Handler\Response\HandlerInterface
     */
    public function types()
    {
        /** @var StatusHandler $handler */
        $handler = $this->requestHandler();
        return $handler->types();
    }
    
    
    /**
     * @return \SkyHub\Api\Handler\Response\HandlerInterface
     */
    public function create()
    {
        /** @var StatusHandler $handler */
        $handler = $this->requestHandler();
        return $handler->create($this->getCode(), $this->getLabel(), $this->getType());
    }
    
    
    /**
     * @return \SkyHub\Api\Handler\Response\HandlerInterface
     */
    public function update()
    {
        /** @var StatusHandler $handler */
        $handler = $this->requestHandler();
        return $handler->update($this->getCode(), $this->getLabel(), $this->getType());
    }
}
